from factory.fuzzy import FuzzyDateTime, FuzzyText
from dateutil.tz import UTC
from datetime import datetime
from factory.django import DjangoModelFactory
from BinanceAPI.models.base_binance_model import BaseBinanceModel


class BaseBinanceFactory(DjangoModelFactory):
    """
    Main functionalities:
    The BaseBinanceFactory class is a DjangoModelFactory that generates fake data for the BaseBinanceModel class.
    It creates instances of the BaseBinanceModel class with randomized values for the created_at and updated_at fields, and a unique ID generated by the generate_unique_id method.

    Methods:
    - generate_unique_id: a static method that generates a unique ID using the FuzzyText class from the factory.fuzzy module.
    - Meta: a nested class that specifies the model to be used for the factory.

    Fields:
    - created_at: a FuzzyDateTime field that generates a random datetime object between January 1, 2020 and January 1, 2022, with UTC timezone.
    - updated_at: a FuzzyDateTime field that generates a random datetime object between January 1, 2020 and January 1, 2022, with UTC timezone.
    """
    created_at = FuzzyDateTime(
        datetime(2020, 1, 1, tzinfo=UTC),
        datetime(2022, 1, 1, tzinfo=UTC),
    ).fuzz()
    updated_at = FuzzyDateTime(
        datetime(2020, 1, 1, tzinfo=UTC),
        datetime(2022, 1, 1, tzinfo=UTC),
    ).fuzz()

    @staticmethod
    def generate_unique_id():
        return FuzzyText(length=10, chars='0123456789').fuzz()

    class Meta:
        model = BaseBinanceModel
