# Generated by Django 4.2.1 on 2023-06-14 10:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "api_public_key",
                    models.CharField(
                        db_index=True,
                        default="CzsU0SaKUOsHUnYgTGyX3LgbiohGE45rO6xOq5NoY2ahAXnljW90ivfNf0wGE6wj",
                        help_text="Public Key for account.",
                        max_length=64,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Nombre de la cuenta.",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Normal", "Normal"), ("INACTIVE", "Inactive")],
                        default="ACTIVE",
                        help_text="Estado de la cuenta.",
                        max_length=8,
                    ),
                ),
                (
                    "maker_commission",
                    models.PositiveIntegerField(help_text="Comisión de maker."),
                ),
                (
                    "taker_commission",
                    models.PositiveIntegerField(help_text="Comisión de taker."),
                ),
                (
                    "buyer_commission",
                    models.PositiveIntegerField(help_text="Comisión de comprador."),
                ),
                (
                    "seller_commission",
                    models.PositiveIntegerField(help_text="Comisión de vendedor."),
                ),
                ("can_trade", models.BooleanField(help_text="Puede hacer trading.")),
                ("can_withdraw", models.BooleanField(help_text="Puede hacer retiros.")),
                (
                    "can_deposit",
                    models.BooleanField(help_text="Puede hacer depósitos."),
                ),
                ("ip_restrict", models.BooleanField(help_text="IP restringida.")),
                (
                    "enable_withdrawals",
                    models.BooleanField(help_text="La API puede hacer retiros."),
                ),
                (
                    "enable_internal_transfer",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones internas."
                    ),
                ),
                (
                    "permits_universal_transfer",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones universales"
                    ),
                ),
                (
                    "enable_vanilla_options",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones universales"
                    ),
                ),
                (
                    "enable_reading",
                    models.BooleanField(help_text="La API puede leer información"),
                ),
                (
                    "enable_futures",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones con futuros"
                    ),
                ),
                (
                    "enable_margin",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones con margenes"
                    ),
                ),
                (
                    "enable_spot_and_margin_trade",
                    models.BooleanField(
                        help_text="La API puede hacer transacciones con spots y margenes"
                    ),
                ),
                (
                    "trading_authority_expiration_time",
                    models.PositiveBigIntegerField(
                        blank=True,
                        help_text="Fecha de expiración de la autorizacíon de la API",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Deposit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "deposit_id",
                    models.CharField(
                        editable=False,
                        help_text="ID de depósito",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad depositada",
                        max_digits=20,
                    ),
                ),
                (
                    "asset",
                    models.CharField(editable=False, help_text="Activo", max_length=10),
                ),
                (
                    "address",
                    models.CharField(
                        editable=False,
                        help_text="Dirección de depósito",
                        max_length=100,
                    ),
                ),
                (
                    "tx_id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="ID de transacción",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                        ],
                        editable=False,
                        help_text="Estado del depósito",
                        max_length=10,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        editable=False, help_text="Fecha y hora del depósito"
                    ),
                ),
                (
                    "confirmations",
                    models.IntegerField(
                        blank=True,
                        editable=False,
                        help_text="Número de confirmaciones",
                        null=True,
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Tarifa de depósito",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "tx_hash",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Hash de la transacción",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "deposits",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        editable=False,
                        help_text="Símbolo del activo",
                        max_length=10,
                        verbose_name="symbolo del activo",
                    ),
                ),
                (
                    "order_id",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        help_text="ID de la orden",
                        max_length=50,
                        unique=True,
                        verbose_name="ID de la orden",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de la orden",
                        max_digits=20,
                        verbose_name="Precio de la orden",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad de activos",
                        max_digits=20,
                        verbose_name="Cantidad de activos",
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")],
                        editable=False,
                        help_text="Lado de la orden",
                        max_length=4,
                        verbose_name="Laso de la orden",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("FILLED", "Filled"),
                            ("CANCELED", "Canceled"),
                        ],
                        editable=False,
                        help_text="Estado de la orden",
                        max_length=8,
                        verbose_name="Estado de la orden",
                    ),
                ),
            ],
            options={
                "db_table": "orders",
            },
        ),
        migrations.CreateModel(
            name="PriceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        editable=False,
                        help_text="Símbolo del activo",
                        max_length=10,
                        verbose_name="Símbolo del activo",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        editable=False,
                        help_text="Marca de tiempo del precio",
                        verbose_name="Marce de tiempo del precio",
                    ),
                ),
                (
                    "open_price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de apertura",
                        max_digits=20,
                        verbose_name="Precio de apertura,",
                    ),
                ),
                (
                    "high_price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio máximo",
                        max_digits=20,
                        verbose_name="Precio máximo",
                    ),
                ),
                (
                    "low_price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio mínimo",
                        max_digits=20,
                        verbose_name="Precio mínimo",
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de cierre",
                        max_digits=20,
                        verbose_name="Precio de cierre",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Volumen de negociación",
                        max_digits=20,
                        verbose_name="Volumen de negoción",
                    ),
                ),
            ],
            options={
                "db_table": "price_history",
            },
        ),
        migrations.CreateModel(
            name="Symbol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        editable=False,
                        help_text="Símbolo del par de trading",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "base_asset",
                    models.CharField(
                        editable=False, help_text="Activo base", max_length=10
                    ),
                ),
                (
                    "quote_asset",
                    models.CharField(
                        editable=False, help_text="Activo de cotización", max_length=10
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        editable=False,
                        help_text="Estado del par de trading",
                        max_length=10,
                    ),
                ),
                (
                    "base_asset_precision",
                    models.IntegerField(
                        editable=False, help_text="Precisión del activo base"
                    ),
                ),
                (
                    "quote_asset_precision",
                    models.IntegerField(
                        editable=False, help_text="Precisión del activo de cotización"
                    ),
                ),
            ],
            options={
                "db_table": "symbols",
            },
        ),
        migrations.CreateModel(
            name="Trade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "trade_id",
                    models.CharField(
                        editable=False,
                        help_text="ID de la operación",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        editable=False, help_text="Símbolo de trading", max_length=20
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")],
                        editable=False,
                        help_text="Lado de la operación (compra/venta)",
                        max_length=4,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de la operación",
                        max_digits=20,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad de la operación",
                        max_digits=20,
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Comisión de la operación",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        editable=False, help_text="Fecha y hora de la operación"
                    ),
                ),
                (
                    "is_maker",
                    models.BooleanField(
                        editable=False,
                        help_text="Indica si la operación fue creada por el maker",
                    ),
                ),
                (
                    "is_buyer",
                    models.BooleanField(
                        editable=False, help_text="Indica si el usuario es el comprador"
                    ),
                ),
                (
                    "commission_asset",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Símbolo de la comisión",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "commission",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Monto de la comisión",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Tasa de comisión",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "buyer_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Comisión del comprador",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "seller_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Comisión del vendedor",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "trade_time",
                    models.BigIntegerField(
                        editable=False,
                        help_text="Tiempo de la operación en milisegundos",
                    ),
                ),
                (
                    "buyer_is_maker",
                    models.BooleanField(
                        editable=False, help_text="Indica si el comprador fue el maker"
                    ),
                ),
                (
                    "ignore",
                    models.BooleanField(
                        editable=False,
                        help_text="Indica si la operación debe ignorarse",
                    ),
                ),
            ],
            options={
                "db_table": "trades",
            },
        ),
        migrations.CreateModel(
            name="TradeHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "symbol",
                    models.CharField(
                        editable=False,
                        help_text="El símbolo del par de trading.",
                        max_length=50,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        editable=False, help_text="La marca de tiempo de la operación."
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="El precio al que se realizó la operación.",
                        max_digits=20,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="La cantidad negociada en la operación.",
                        max_digits=20,
                    ),
                ),
                (
                    "is_buyer_maker",
                    models.BooleanField(
                        default=True,
                        editable=False,
                        help_text="Indica si el comprador es el creador de la orden.",
                    ),
                ),
                (
                    "is_best_match",
                    models.BooleanField(
                        default=True,
                        editable=False,
                        help_text="Indica si esta operación es el último precio negociado del par.",
                    ),
                ),
                (
                    "is_ignored",
                    models.BooleanField(
                        default=True,
                        editable=False,
                        help_text="Indica si esta operación es ignorada en el historial.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trade History",
                "verbose_name_plural": "Trade Histories",
            },
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "asset",
                    models.CharField(
                        choices=[("BTC", "Bitcoin"), ("ETH", "Ethereum")],
                        help_text="Activo de la cartera",
                        max_length=10,
                    ),
                ),
                (
                    "free",
                    models.DecimalField(
                        decimal_places=10, help_text="Saldo disponible", max_digits=20
                    ),
                ),
                (
                    "locked",
                    models.DecimalField(
                        decimal_places=10, help_text="Saldo bloqueado", max_digits=20
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=10,
                        help_text="Saldo total (disponible + bloqueado)",
                        max_digits=20,
                    ),
                ),
            ],
            options={
                "db_table": "wallets",
            },
        ),
        migrations.CreateModel(
            name="Withdrawal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "withdrawal_id",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        help_text="ID de retiro",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad retirada",
                        max_digits=20,
                    ),
                ),
                (
                    "asset",
                    models.CharField(editable=False, help_text="Activo", max_length=10),
                ),
                (
                    "address",
                    models.CharField(
                        editable=False, help_text="Dirección de retiro", max_length=100
                    ),
                ),
                (
                    "tx_id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="ID de transacción",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                        ],
                        editable=False,
                        help_text="Estado del retiro",
                        max_length=10,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        editable=False, help_text="Fecha y hora del retiro"
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Tarifa de retiro",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "tx_hash",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Hash de la transacción",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "withdrawals",
            },
        ),
        migrations.CreateModel(
            name="OrderBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "last_update_id",
                    models.BigIntegerField(
                        blank=True,
                        editable=False,
                        help_text="ID de última actualización del libro de órdenes",
                        null=True,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de la actualización del libro de órdenes",
                        null=True,
                    ),
                ),
                (
                    "asks",
                    models.JSONField(
                        blank=True,
                        editable=False,
                        help_text="La lista de órdenes de venta (asks) del libro de órdenes.",
                        null=True,
                    ),
                ),
                (
                    "bids",
                    models.JSONField(
                        blank=True,
                        editable=False,
                        help_text="La lista de órdenes de compra (bids) del libro de órdenes.",
                        null=True,
                    ),
                ),
                (
                    "ask_total_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="El volumen total de las órdenes de venta.",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "bid_total_volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="El volumen total de las órdenes de compra.",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "spread",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="La diferencia entre el precio más alto de las órdenes de compra y el precio más bajo de las órdenes de venta.",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "liquidity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="La liquidez del par de trading.",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "depth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="La profundidad del libro de órdenes.",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        help_text="Símbolo del par de trading",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_books",
                        to="BinanceAPI.symbol",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Book",
                "verbose_name_plural": "Order Books",
                "db_table": "order_books",
            },
        ),
        migrations.CreateModel(
            name="Candlestick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "open_time",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="Fecha y hora de apertura de la vela",
                        null=True,
                    ),
                ),
                (
                    "close_time",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="Fecha y hora de cierre de la vela",
                        null=True,
                    ),
                ),
                (
                    "open_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de apertura de la vela",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "close_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Precio de cierre de la vela",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "high_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Precio más alto de la vela",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "low_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Precio más bajo de la vela",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        decimal_places=10,
                        help_text="Volumen de trading de la vela",
                        max_digits=30,
                    ),
                ),
                (
                    "symbol",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        help_text="Símbolo del par de trading",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="candlesticks",
                        to="BinanceAPI.symbol",
                    ),
                ),
            ],
            options={
                "db_table": "candlesticks",
            },
        ),
        migrations.CreateModel(
            name="BalanceSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Fecha y hora de creación"
                    ),
                ),
                (
                    "asset",
                    models.CharField(
                        choices=[("BTC", "Bitcoin"), ("ETH", "Ethereum")],
                        editable=False,
                        help_text="Activo",
                        max_length=10,
                    ),
                ),
                (
                    "free",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad disponible",
                        max_digits=20,
                    ),
                ),
                (
                    "locked",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad bloqueada",
                        max_digits=20,
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad total (free + locked)",
                        max_digits=20,
                    ),
                ),
                (
                    "in_order",
                    models.DecimalField(
                        blank=True,
                        decimal_places=10,
                        editable=False,
                        help_text="Cantidad en órdenes abiertas",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="BinanceAPI.account",
                    ),
                ),
            ],
            options={
                "db_table": "balances",
            },
        ),
    ]
